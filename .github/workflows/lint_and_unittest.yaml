name: Code best practice and unittesting

on:
  pull_request:
    branches:
      - main
    paths:
      - 'sources/bin/**'  # This will trigger the workflow only if files in the 'bin' folder are modified.

concurrency:
  group: lint-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
          python-version: '3.11'
    - name: Install tox
      run: python -m pip install 'tox>=1.8.0'
    - name: Lint
      run: tox -e lint
  
  unittest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: python -m pip install -r requirements.txt
      - name: Run unittests
        run: |
          cd sources
          PYTHONPATH=bin python -m unittest discover -s bin/tests

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install requirements
        run: python -m pip install -r requirements.txt

      - name: Run unittests
        run: |
          cd sources
          PYTHONPATH=bin coverage run -m unittest discover -s bin/tests
          coverage report --omit="bin/tests/*" > coverage.txt

      - name: Post coverage summary to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = fs.readFileSync('sources/coverage.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ§ª **Coverage Report**\n\n\`\`\`\n${coverage}\n\`\`\``
            });
